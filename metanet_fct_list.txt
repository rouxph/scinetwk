add_edge - adds an edge or an arc between two nodes  <= from metanet
add_node - adds a disconnected node to a graph  <= from metanet
adj_lists - computes adjacency lists <= à refaire (m6ta2lpd, m6ta2lpu)
arc_graph - graph with nodes corresponding to arcs <= from metanet
arc_number - number of arcs of a graph <= from metanet
articul - finds one or more articulation points <= à refaire (m6ta2lpu, m6ta2lpu)
bandwr - bandwidth reduction for a sparse matrix <= à refaire (m6*)
best_match - best matching of a graph <= à refaire (m6*)
chain_struct - chained structure from adjacency lists of a graph 
check_graph - checks a Scilab graph list <=  done
circuit - finds a circuit or the rank function in a directed graph <= à refaire (m6*)
con_nodes - set of nodes of a connected component <= à refaire (m6*)
connex - connected components <= à refaire (m6*)
contract_edge - contracts edges between two nodes <= from metanet
convex_hull - convex hull of a set of points in the plane <= à refaire (m6*)
cycle_basis - basis of cycle of a simple undirected graph  <= from metanet
delete_arcs - deletes all the arcs or edges between a set of nodes <= from metanet
delete_nodes - deletes nodes <= from metanet
edge_number - number of edges of a graph 
edit_graph - graph and network graphical editor 
edit_graph_menus - edit_graph menus description 
find_path - finds a path between two nodes  <= à refaire (m6*)
gen_net - interactive or random generation of a network  <= à refaire (m6*)
girth - girth of a directed graph 
glist - graph list creation 
graph-list - description of graph list 
graph_2_mat - node-arc or node-node incidence matrix of a graph 
graph_center - center of a graph   <= à refaire (m6*)
graph_complement - complement of a graph 
graph_diameter - diameter of a graph  <= à refaire (m6*)
graph_power - kth power of a directed 1-graph 
graph_simp - converts a graph to a simple undirected graph 
graph_sum - sum of two graphs 
graph_union - union of two graphs 
hamilton - hamiltonian circuit of a graph  <= à refaire (m6*)
is_connex - connectivity test  <= à refaire (m6*)
knapsack - solves a 0-1 multiple knapsack problem 
line_graph - graph with nodes corresponding to edges 
load_graph - loads a graph <=  replace by exec ?
make_graph - makes a graph list <=done
mat_2_graph - graph from node-arc or node-node incidence matrix 
max_cap_path - maximum capacity path  <= à refaire (m6*)
max_clique - maximum clique of a graph  <= à refaire (m6*)
max_flow - maximum flow between two nodes  <= à refaire (m6*)
mesh2d - triangulation of n points in the plane   <= à refaire (m6*)
min_lcost_cflow - minimum linear cost constrained flow   <= à refaire (m6*)
min_lcost_flow1 - minimum linear cost flow  <= à refaire (m6*)
min_lcost_flow2 - minimum linear cost flow   <= à refaire (m6*)
min_qcost_flow - minimum quadratic cost flow  <= à refaire (m6*)
min_weight_tree - minimum weight spanning tree  <= à refaire (m6*)
neighbors - nodes connected to a node 
netclose - closes an edit_graph window 
netwindow - selects the current edit_graph window 
netwindows - gets the numbers of edit_graph windows 
node_number - number of nodes of a graph 
nodes_2_path - path from a set of nodes  <= à refaire (m6*)
nodes_degrees - degrees of the nodes of a graph 
path_2_nodes - set of nodes from a path  <= à refaire (m6*)
perfect_match - min-cost perfect matching  <= à refaire (m6*)
pipe_network - solves the pipe network problem 
plot_graph - general plot of a graph 
predecessors - tail nodes of incoming arcs of a node 
qassign - solves a quadratic assignment problem  <= à refaire (m6*)
salesman - solves the travelling salesman problem  <= à refaire (m6*)
save_graph - saves a graph <=done
shortest_path - shortest path  <= à refaire (m6*)
show_arcs - highlights a set of arcs 
show_graph - displays a graph <= done but to improve
show_nodes - highlights a set of nodes 
split_edge - splits an edge by inserting a node 
strong_con_nodes - set of nodes of a strong connected component  <= à refaire (m6*)
strong_connex - strong connected components  <= à refaire (m6*)
subgraph - subgraph of a graph 
successors - head nodes of outgoing arcs of a node 
supernode - replaces a group of nodes with a single node 
trans_closure - transitive closure  <= à refaire (m6*)
